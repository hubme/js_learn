1. JavaScript 代码块
JavaScript 语句通过代码块的形式进行组合。
块由左花括号开始，由右花括号结束。
块的作用是使语句序列一起执行。
JavaScript 函数是将语句组合在块中的典型例子。

2. JavaScript 对大小写敏感。

3. JavaScript是脚本语言。浏览器会在读取代码时，逐行地执行脚本代码。而对于传统编程来说，会在执行前对所有代码进行编译。

4.向变量分配文本值时，应该用双引号或单引号包围这个值。

5.一条语句中声明很多变量。该语句以 var 开头，并使用逗号分隔变量(忽略空格和折行)即可：
var name="Gates", age=56, job="CEO";
或
var name="Gates",
age=56,
job="CEO";

6.Value = undefined
在计算机程序中，经常会声明无值的变量。未使用值来声明的变量，其值实际上是 undefined。

7.如果重新声明 JavaScript 变量，该变量的值不会丢失：
在以下两条语句执行后，变量 carname 的值依然是 "hello"：
var carname="hello";
var carname;

8.JavaScript 拥有动态类型
JavaScript 拥有动态类型。这意味着相同的变量可用作不同的类型：
var x                // x 为 undefined
var x = 6;           // x 为数字
var x = "Bill";      // x 为字符串

9.您可以在字符串中使用引号，只要不匹配包围字符串的引号即可：
var answer="Nice to meet you!";
var answer="He is called 'Bill'";
var answer='He is called "Bill"';

10.JavaScript 数字
JavaScript 只有一种数字类型。数字可以带小数点，也可以不带：
var x1=34.00;      //使用小数点来写
var x2=34;         //不使用小数点来写
var y=123e5;      // 12300000
var z=123e-5;     // 0.00123

11.JavaScript 布尔
var x=true
var y=false

12.JavaScript 数组
var cars=new Array();
cars[0]="Audi";
cars[1]="BMW";
cars[2]="Volvo";

condensed(浓缩的) array:	var cars=new Array("Audi","BMW","Volvo");
literal array:	var cars=["Audi","BMW","Volvo"];

13. JavaScript 对象
对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔：
var person={firstname:"Bill", lastname:"Gates", id:5566};

对象属性有两种寻址方式：
name=person.lastname;
name=person["lastname"];

14. Undefined 和 Null
Undefined 这个值表示变量不含有值。 可以通过将变量的值设置为 null 来清空变量。
person=null;

15. 声明变量类型
当您声明新变量时，可以使用关键词 "new" 来声明其类型：
var carname=new String;
var x=      new Number;
var y=      new Boolean;
var cars=   new Array;
var person= new Object;

JavaScript 中的所有事物都是对象：字符串、数字、数组、日期，等等。